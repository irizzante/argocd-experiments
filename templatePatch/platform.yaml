apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: platform
  namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
  # Create a matrix generator that will install all chart in all clusters
  - matrix:
      generators:
        # Get all clusters
      - clusters: {}
      - git:
          repoURL: https://github.com/irizzante/argocd-experiments.git
          revision: HEAD
          files:
          # Find all .argocd.yaml
            - path: 'templatePatch/**/.argocd.yaml'
          values:
            # Add enabled field if clusters.${name}.enabled = true
            # name comes from the cluster generator
            enabled: '{{ dig "clusters" .name "enabled" true . }}'
    #selector:
    #  matchLabels:
    #    # Keep only the one which field enabled=true
    #    enabled: "true"
  template:
    metadata:
      name: '{{ .path.basename }}'
    spec:
      project: default
      sources:
        # First source is for value files
        - repoURL: https://github.com/irizzante/argocd-experiments.git
          # Default revision is HEAD but can be overriden with clusters.${name}.valuesRevision
          targetRevision: '{{ dig "clusters" .name "valuesRevision" "HEAD" . }}'
          ref: values
        # Second source is for chart
        # Default revision is .source.targetRevision but can be overriden with clusters.${name}.chartRevision
        - repoURL: '{{ .source.repoURL }}'
          targetRevision: '{{ dig "clusters" .name "chartRevision" .source.targetRevision . }}'
          helm:
            releaseName: '{{ default .path.basename .source.releaseName }}'
            ignoreMissingValueFiles: true
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{ .destination.namespace }}'
      syncPolicy:
        automated:
          prune: true
        syncOptions:
          - ServerSideApply={{ dig "syncPolicy" "syncOptions" "ServerSideApply" "true" . }}
          - CreateNamespace={{ dig "syncPolicy" "syncOptions" "CreateNamespace" "true" . }}
          
